# -*- coding: utf-8 -*-
"""A7//MLR-Streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1phm5V3o_Q74KUUimBwoW-OWq4L6Hq5nl
"""

import streamlit as st
import pandas as pd
from sklearn.linear_model import LogisticRegression
import pickle

# Create and train the Logistic Regression model
# Replace this with your actual model training code

# Assuming your features and target are in X_train and y_train
# For example, load the titanic dataset and split features and target
from sklearn.model_selection import train_test_split
from sklearn.datasets import fetch_openml
titanic = fetch_openml('titanic', version=1, as_frame=True)
X = titanic.data[['pclass', 'age', 'sibsp', 'parch', 'fare', 'sex', 'embarked']]
y = titanic.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the model
# Preprocess data - handle categorical variables and missing values as needed
X_train['sex'] = X_train['sex'].map({'male': 1, 'female': 0})
X_train['embarked'] = X_train['embarked'].fillna(X_train['embarked'].mode()[0])
X_train = pd.get_dummies(X_train, columns=['embarked'], prefix=['Embarked'])

# Impute numerical features with the mean
numerical_features = ['pclass', 'age', 'sibsp', 'parch', 'fare', 'sex'] # Assuming these are your numerical features
for feature in numerical_features:
  if X_train[feature].isnull().any():
    X_train[feature] = X_train[feature].fillna(X_train[feature].mean())

X_train = X_train.rename(columns={'pclass': 'Pclass', 'age': 'Age', 'sibsp': 'SibSp', 'parch': 'Parch', 'fare': 'Fare', 'sex': 'Sex_male'})

model = LogisticRegression()
model.fit(X_train, y_train)

# Save the trained model
with open('titanic_model.pkl', 'wb') as file:
    pickle.dump(model, file)

# Load the trained model
with open('titanic_model.pkl', 'rb') as file:
    model = pickle.load(file)

# Define the Streamlit app
st.title("Titanic Survival Prediction")

# Input fields for user
pclass = st.selectbox("Passenger Class", [1, 2, 3])
age = st.number_input("Age", min_value=0, max_value=100, value=25)
sibsp = st.number_input("Number of Siblings/Spouses", min_value=0, max_value=10, value=0)
parch = st.number_input("Number of Parents/Children", min_value=0, max_value=10, value=0)
fare = st.number_input("Fare", min_value=0.0, value=10.0)
sex = st.selectbox("Sex", ["Male", "Female"])
embarked = st.selectbox("Embarked", ["Southampton", "Cherbourg", "Queenstown"])